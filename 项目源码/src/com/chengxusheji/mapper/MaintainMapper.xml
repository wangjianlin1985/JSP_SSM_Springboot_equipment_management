<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace命名空间，为了对sql语句进行隔离，方便管理，mapper开发dao方式，使用namespace有特殊作用  
mapper代理开发时将namespace指定为mapper接口的全限定名  
 -->
<mapper namespace="com.chengxusheji.mapper.MaintainMapper"> 
<!--在mapper.xml文件中配置很多的sql语句，执行每个sql语句时，封装为MappedStatement对象 
mapper.xml以statement为单位管理sql语句  
 -->
	<!-- 添加维护情况记录 -->
	<insert id="addMaintain" parameterType="maintain">
		insert into t_maintain(ssdw,jhsj,whnr) values 
		(#{ssdw},#{jhsj},#{whnr})
	</insert>

	<!-- 按照查询条件分页查询维护情况记录 -->
	<select id="queryMaintain" resultMap="maintainMap" >
		select t_maintain.* from t_maintain ${where} limit #{startIndex},#{pageSize}
	</select>
	<resultMap id="maintainMap" type="maintain">
        <id property="maintainId" column="maintainId" />
    </resultMap>

    <!-- 按照查询条件查询所有维护情况记录 -->
	<select id="queryMaintainList" resultMap="maintainMap" >
		select t_maintain.* from t_maintain ${where}
	</select>

    <!-- 按照查询条件的维护情况记录数 -->
	<select id="queryMaintainCount" resultType="int">
		select count(*) from t_maintain ${where}
	</select>

	<!-- 根据主键查询某个维护情况记录 -->
	<select id="getMaintain" parameterType="int" resultMap="maintainMap">
		select * from t_maintain where t_maintain.maintainId = #{maintainId}
	</select>

	<!-- 更新维护情况记录 -->
	<update id="updateMaintain" parameterType="maintain">
		update t_maintain set ssdw=#{ssdw},jhsj=#{jhsj},whnr=#{whnr} where maintainId = #{maintainId}
	</update>

	<!-- 删除维护情况记录 -->
	<delete id="deleteMaintain" parameterType="int">
		delete from t_maintain where maintainId=#{maintainId}
	</delete>

</mapper>
