<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace命名空间，为了对sql语句进行隔离，方便管理，mapper开发dao方式，使用namespace有特殊作用  
mapper代理开发时将namespace指定为mapper接口的全限定名  
 -->
<mapper namespace="com.chengxusheji.mapper.DeviceTypeMapper"> 
<!--在mapper.xml文件中配置很多的sql语句，执行每个sql语句时，封装为MappedStatement对象 
mapper.xml以statement为单位管理sql语句  
 -->
	<!-- 添加设备类型记录 -->
	<insert id="addDeviceType" parameterType="deviceType">
		insert into t_deviceType(typeName) values 
		(#{typeName})
	</insert>

	<!-- 按照查询条件分页查询设备类型记录 -->
	<select id="queryDeviceType" resultMap="deviceTypeMap" >
		select t_deviceType.* from t_deviceType ${where} limit #{startIndex},#{pageSize}
	</select>
	<resultMap id="deviceTypeMap" type="deviceType">
        <id property="typeId" column="typeId" />
    </resultMap>

    <!-- 按照查询条件查询所有设备类型记录 -->
	<select id="queryDeviceTypeList" resultMap="deviceTypeMap" >
		select t_deviceType.* from t_deviceType ${where}
	</select>

    <!-- 按照查询条件的设备类型记录数 -->
	<select id="queryDeviceTypeCount" resultType="int">
		select count(*) from t_deviceType ${where}
	</select>

	<!-- 根据主键查询某个设备类型记录 -->
	<select id="getDeviceType" parameterType="int" resultMap="deviceTypeMap">
		select * from t_deviceType where t_deviceType.typeId = #{typeId}
	</select>

	<!-- 更新设备类型记录 -->
	<update id="updateDeviceType" parameterType="deviceType">
		update t_deviceType set typeName=#{typeName} where typeId = #{typeId}
	</update>

	<!-- 删除设备类型记录 -->
	<delete id="deleteDeviceType" parameterType="int">
		delete from t_deviceType where typeId=#{typeId}
	</delete>

</mapper>
